package com.springboot.c4_domain.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class RoastExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table roast
     *
     * @mbggenerated Mon Mar 18 22:37:41 CST 2024
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table roast
     *
     * @mbggenerated Mon Mar 18 22:37:41 CST 2024
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table roast
     *
     * @mbggenerated Mon Mar 18 22:37:41 CST 2024
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table roast
     *
     * @mbggenerated Mon Mar 18 22:37:41 CST 2024
     */
    public RoastExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table roast
     *
     * @mbggenerated Mon Mar 18 22:37:41 CST 2024
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table roast
     *
     * @mbggenerated Mon Mar 18 22:37:41 CST 2024
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table roast
     *
     * @mbggenerated Mon Mar 18 22:37:41 CST 2024
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table roast
     *
     * @mbggenerated Mon Mar 18 22:37:41 CST 2024
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table roast
     *
     * @mbggenerated Mon Mar 18 22:37:41 CST 2024
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table roast
     *
     * @mbggenerated Mon Mar 18 22:37:41 CST 2024
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table roast
     *
     * @mbggenerated Mon Mar 18 22:37:41 CST 2024
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table roast
     *
     * @mbggenerated Mon Mar 18 22:37:41 CST 2024
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table roast
     *
     * @mbggenerated Mon Mar 18 22:37:41 CST 2024
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table roast
     *
     * @mbggenerated Mon Mar 18 22:37:41 CST 2024
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table roast
     *
     * @mbggenerated Mon Mar 18 22:37:41 CST 2024
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andRoastIdIsNull() {
            addCriterion("roast_id is null");
            return (Criteria) this;
        }

        public Criteria andRoastIdIsNotNull() {
            addCriterion("roast_id is not null");
            return (Criteria) this;
        }

        public Criteria andRoastIdEqualTo(Integer value) {
            addCriterion("roast_id =", value, "roastId");
            return (Criteria) this;
        }

        public Criteria andRoastIdNotEqualTo(Integer value) {
            addCriterion("roast_id <>", value, "roastId");
            return (Criteria) this;
        }

        public Criteria andRoastIdGreaterThan(Integer value) {
            addCriterion("roast_id >", value, "roastId");
            return (Criteria) this;
        }

        public Criteria andRoastIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("roast_id >=", value, "roastId");
            return (Criteria) this;
        }

        public Criteria andRoastIdLessThan(Integer value) {
            addCriterion("roast_id <", value, "roastId");
            return (Criteria) this;
        }

        public Criteria andRoastIdLessThanOrEqualTo(Integer value) {
            addCriterion("roast_id <=", value, "roastId");
            return (Criteria) this;
        }

        public Criteria andRoastIdIn(List<Integer> values) {
            addCriterion("roast_id in", values, "roastId");
            return (Criteria) this;
        }

        public Criteria andRoastIdNotIn(List<Integer> values) {
            addCriterion("roast_id not in", values, "roastId");
            return (Criteria) this;
        }

        public Criteria andRoastIdBetween(Integer value1, Integer value2) {
            addCriterion("roast_id between", value1, value2, "roastId");
            return (Criteria) this;
        }

        public Criteria andRoastIdNotBetween(Integer value1, Integer value2) {
            addCriterion("roast_id not between", value1, value2, "roastId");
            return (Criteria) this;
        }

        public Criteria andTimeIsNull() {
            addCriterion("time is null");
            return (Criteria) this;
        }

        public Criteria andTimeIsNotNull() {
            addCriterion("time is not null");
            return (Criteria) this;
        }

        public Criteria andTimeEqualTo(Date value) {
            addCriterion("time =", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotEqualTo(Date value) {
            addCriterion("time <>", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeGreaterThan(Date value) {
            addCriterion("time >", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("time >=", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeLessThan(Date value) {
            addCriterion("time <", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeLessThanOrEqualTo(Date value) {
            addCriterion("time <=", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeIn(List<Date> values) {
            addCriterion("time in", values, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotIn(List<Date> values) {
            addCriterion("time not in", values, "time");
            return (Criteria) this;
        }

        public Criteria andTimeBetween(Date value1, Date value2) {
            addCriterion("time between", value1, value2, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotBetween(Date value1, Date value2) {
            addCriterion("time not between", value1, value2, "time");
            return (Criteria) this;
        }

        public Criteria andApplauseNumberIsNull() {
            addCriterion("applause_number is null");
            return (Criteria) this;
        }

        public Criteria andApplauseNumberIsNotNull() {
            addCriterion("applause_number is not null");
            return (Criteria) this;
        }

        public Criteria andApplauseNumberEqualTo(Integer value) {
            addCriterion("applause_number =", value, "applauseNumber");
            return (Criteria) this;
        }

        public Criteria andApplauseNumberNotEqualTo(Integer value) {
            addCriterion("applause_number <>", value, "applauseNumber");
            return (Criteria) this;
        }

        public Criteria andApplauseNumberGreaterThan(Integer value) {
            addCriterion("applause_number >", value, "applauseNumber");
            return (Criteria) this;
        }

        public Criteria andApplauseNumberGreaterThanOrEqualTo(Integer value) {
            addCriterion("applause_number >=", value, "applauseNumber");
            return (Criteria) this;
        }

        public Criteria andApplauseNumberLessThan(Integer value) {
            addCriterion("applause_number <", value, "applauseNumber");
            return (Criteria) this;
        }

        public Criteria andApplauseNumberLessThanOrEqualTo(Integer value) {
            addCriterion("applause_number <=", value, "applauseNumber");
            return (Criteria) this;
        }

        public Criteria andApplauseNumberIn(List<Integer> values) {
            addCriterion("applause_number in", values, "applauseNumber");
            return (Criteria) this;
        }

        public Criteria andApplauseNumberNotIn(List<Integer> values) {
            addCriterion("applause_number not in", values, "applauseNumber");
            return (Criteria) this;
        }

        public Criteria andApplauseNumberBetween(Integer value1, Integer value2) {
            addCriterion("applause_number between", value1, value2, "applauseNumber");
            return (Criteria) this;
        }

        public Criteria andApplauseNumberNotBetween(Integer value1, Integer value2) {
            addCriterion("applause_number not between", value1, value2, "applauseNumber");
            return (Criteria) this;
        }

        public Criteria andIsDeletedIsNull() {
            addCriterion("is_deleted is null");
            return (Criteria) this;
        }

        public Criteria andIsDeletedIsNotNull() {
            addCriterion("is_deleted is not null");
            return (Criteria) this;
        }

        public Criteria andIsDeletedEqualTo(Integer value) {
            addCriterion("is_deleted =", value, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedNotEqualTo(Integer value) {
            addCriterion("is_deleted <>", value, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedGreaterThan(Integer value) {
            addCriterion("is_deleted >", value, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedGreaterThanOrEqualTo(Integer value) {
            addCriterion("is_deleted >=", value, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedLessThan(Integer value) {
            addCriterion("is_deleted <", value, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedLessThanOrEqualTo(Integer value) {
            addCriterion("is_deleted <=", value, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedIn(List<Integer> values) {
            addCriterion("is_deleted in", values, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedNotIn(List<Integer> values) {
            addCriterion("is_deleted not in", values, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedBetween(Integer value1, Integer value2) {
            addCriterion("is_deleted between", value1, value2, "isDeleted");
            return (Criteria) this;
        }

        public Criteria andIsDeletedNotBetween(Integer value1, Integer value2) {
            addCriterion("is_deleted not between", value1, value2, "isDeleted");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table roast
     *
     * @mbggenerated do_not_delete_during_merge Mon Mar 18 22:37:41 CST 2024
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table roast
     *
     * @mbggenerated Mon Mar 18 22:37:41 CST 2024
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}